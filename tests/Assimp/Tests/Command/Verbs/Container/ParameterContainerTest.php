<?php
namespace Assimp\Tests\Command\Verbs\Container;

use Assimp\Command\Verbs\Container\ParameterContainer;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-12-26 at 12:23:35.
 */
class ParameterContainerTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var ParameterContainer
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new ParameterContainer();
    }

    /**
     * @covers Assimp\Command\Verbs\Container\ParameterContainer::get
     * @covers Assimp\Command\Verbs\Container\ParameterContainer::set
     * @covers Assimp\Command\Verbs\Container\ParameterContainer::add
     * @covers Assimp\Command\Verbs\Container\ParameterContainer::has
     * @covers Assimp\Command\Verbs\Container\ParameterContainer::remove
     */
    public function testGetSetAddHasValue()
    {
        $this->object->add('var1', 1);
        $this->assertTrue($this->object->has('var1'));
		$this->assertEquals(1, $this->object->get('var1'));

		$this->object->remove('var1');
        $this->assertFalse($this->object->has('var1'));

		$this->object->set(array('var2' => 2));
        $this->assertTrue($this->object->has('var2'));
		$this->assertEquals(2, $this->object->get('var2'));

		$this->object->remove('var2');
        $this->assertFalse($this->object->has('var2'));
    }


    /**
     * @covers Assimp\Command\Verbs\Container\ParameterContainer::__toString
     * @covers Assimp\Command\Verbs\Container\ParameterContainer::all
     */
    public function test__toString()
    {
        $this->object->set(array('var1' => 1));
        $this->assertEquals('--var1=1', (string) $this->object);

        $this->object->remove('var1')->add('v', 1);
        $this->assertEquals('-v1', (string) $this->object);

        $this->object->set(array('var1' => 2));
        $this->assertEquals('-v1 --var1=2', (string) $this->object);
    }
}
